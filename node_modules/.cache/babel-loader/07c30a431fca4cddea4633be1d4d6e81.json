{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AEF\\\\app\\\\src\\\\components\\\\StockList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport finnhub from '../api/Finhub';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockList = () => {\n  _s();\n  const [stock, setStock] = useState();\n  const [watchList, setWatchList] = useState(['GOOGLE', 'MSFT', 'AMZ']);\n  useEffect(() => {\n    let IsMounted = true;\n    const fetchdate = async () => {\n      try {\n        const response = await finnhub.get(\"/quote\", {\n          params: {\n            Symbol: 'MSFT'\n          }\n        });\n        console.log(response);\n        if (IsMounted) {\n          setStock(response.data);\n          console.log(stock);\n        }\n      } catch (err) {}\n    };\n    fetchdate();\n    return () => IsMounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"StockList\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(StockList, \"JVp/3tlfkLEbBPPIrPSY/pjNNTo=\");\n_c = StockList;\nexport default StockList;\nvar _c;\n$RefreshReg$(_c, \"StockList\");","map":{"version":3,"names":["useState","useEffect","finnhub","jsxDEV","_jsxDEV","StockList","_s","stock","setStock","watchList","setWatchList","IsMounted","fetchdate","response","get","params","Symbol","console","log","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AEF/app/src/components/StockList.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport finnhub from '../api/Finhub';\r\nconst StockList = () => {\r\n    const [stock, setStock] = useState()\r\n    const [watchList, setWatchList] = useState(['GOOGLE','MSFT','AMZ'])\r\n    useEffect(() => {\r\n        let IsMounted = true\r\n        const fetchdate = async () => {\r\n            try {\r\n                const response = await finnhub.get(\"/quote\", {params: {Symbol:'MSFT'}}) \r\n                console.log(response)\r\n                if (IsMounted) {\r\n                    setStock(response.data)\r\n                    console.log(stock)\r\n                }\r\n            } catch(err){}\r\n        }\r\n        fetchdate()\r\n        return () => (IsMounted = false)\r\n    },[])\r\n    return (\r\n    <div>\r\n      StockList\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StockList\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,QAAQ,EAAC,MAAM,EAAC,KAAK,CAAC,CAAC;EACnEC,SAAS,CAAC,MAAM;IACZ,IAAIU,SAAS,GAAG,IAAI;IACpB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,GAAG,CAAC,QAAQ,EAAE;UAACC,MAAM,EAAE;YAACC,MAAM,EAAC;UAAM;QAAC,CAAC,CAAC;QACvEC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;QACrB,IAAIF,SAAS,EAAE;UACXH,QAAQ,CAACK,QAAQ,CAACM,IAAI,CAAC;UACvBF,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC;QACtB;MACJ,CAAC,CAAC,OAAMa,GAAG,EAAC,CAAC;IACjB,CAAC;IACDR,SAAS,CAAC,CAAC;IACX,OAAO,MAAOD,SAAS,GAAG,KAAM;EACpC,CAAC,EAAC,EAAE,CAAC;EACL,oBACAP,OAAA;IAAAiB,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAAAnB,EAAA,CAvBKD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAyBf,eAAeA,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AEF\\\\test-app\\\\src\\\\components\\\\Tasks.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = _ref => {\n  let {\n    vasrs\n  } = _ref;\n  // const dava = async () => {\n  //   const req = await fetch('loly.json')\n  //   const data = await req.text()\n  //   console.log(data)\n  // }\n  function loadUser() {\n    let xhr = new XMLHttpRequest();\n    xhr.open('GET', 'loly.json', true);\n    xhr.onload = function () {\n      if (this.status == 200) {\n        let user = JSON.parse(this.responseText);\n        console.log(user);\n      }\n    };\n    xhr.send();\n  }\n  dava();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: vasrs[0].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["Tasks","_ref","vasrs","loadUser","xhr","XMLHttpRequest","open","onload","status","user","JSON","parse","responseText","console","log","send","dava","_jsxDEV","_Fragment","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AEF/test-app/src/components/Tasks.js"],"sourcesContent":["const Tasks = ({vasrs}) => {\r\n  // const dava = async () => {\r\n  //   const req = await fetch('loly.json')\r\n  //   const data = await req.text()\r\n  //   console.log(data)\r\n  // }\r\n  function loadUser(){\r\n    let xhr = new XMLHttpRequest()\r\n    xhr.open('GET','loly.json', true)\r\n    xhr.onload = function(){\r\n        if(this.status == 200){\r\n            let user = JSON.parse(this.responseText)\r\n            console.log(user)\r\n        }\r\n    }\r\n    xhr.send()\r\n}\r\n\r\n  dava()\r\n  return (\r\n    <>\r\n      <h3>{vasrs[0].id}</h3>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n"],"mappings":";;;AAAA,MAAMA,KAAK,GAAGC,IAAA,IAAa;EAAA,IAAZ;IAACC;EAAK,CAAC,GAAAD,IAAA;EACpB;EACA;EACA;EACA;EACA;EACA,SAASE,QAAQA,CAAA,EAAE;IACjB,IAAIC,GAAG,GAAG,IAAIC,cAAc,EAAE;IAC9BD,GAAG,CAACE,IAAI,CAAC,KAAK,EAAC,WAAW,EAAE,IAAI,CAAC;IACjCF,GAAG,CAACG,MAAM,GAAG,YAAU;MACnB,IAAG,IAAI,CAACC,MAAM,IAAI,GAAG,EAAC;QAClB,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;QACxCC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MACrB;IACJ,CAAC;IACDL,GAAG,CAACW,IAAI,EAAE;EACd;EAEEC,IAAI,EAAE;EACN,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAKjB,KAAK,CAAC,CAAC,CAAC,CAACkB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAM,iBACrB;AAEP,CAAC;AAAAC,EAAA,GAxBKzB,KAAK;AA0BX,eAAeA,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}